extends ../../layout/layout

block variables
  - var title = 'Флоаты.'
  - var pageClass = 'article-page'

block content
  main
    article.article.container
      h1= title
      h2 Свойство float.
      p Изначально свойство #[b float] было предназначено, чтобы включать обтекание элементов текстом. Для отдельных элементов в потоке текста, врезок, блоков с заметками и ссылками обтекание подходит как нельзя лучше.
      p Значения:
      ul
        li #[b left] — элемент ужимается по ширине под своё содержимое, прижимается к левому краю родителя, другие элементы обтекают его справа.
        li #[b right] — элемент ужимается по ширине под своё содержимое, прижимается к правому краю родителя, другие элементы обтекают его слева.
        li #[b none] — (по умолчанию) отключает режим обтекания и возвращает элементу нормальное поведение.
      p Зафлоаченному элементу можно явно задавать размеры и отступы.
      p Если зафлоатить строчный элемент, то он начинает вести себя как блочный, а именно воспринимать размеры и отступы.
      h2 float и выпадание из потока.
      p Зафлоаченные элементы выпадают из потока, но лишь частично:
      ul
        li Блочные элементы, которые идут в коде после зафлоаченного блока, перестают его замечать. Они подтягиваются вверх и занимают его место, как будто его и нет, но текст внутри этих блочных элементов продолжает воспринимать зафлоаченный блок и обтекает его.
        li Строчные элементы, расположенные в коде после зафлоаченного блока, начинают обтекать его со свободной стороны.
      p Такое поведение флоатов даёт интересные эффекты:
      ul
        li Эффект прохождения сквозь блоки. Проявляется, когда зафлоаченный элемент выше, чем несколько последующих за ним блоков.
        li Эффект выпадания из родителя или схлопывание родителя. Проявляется тогда, когда все дочерние блоки в родителе зафлоачены. В этом случае родитель схлопывается по высоте, как будто в нём нет содержимого, а блоки выпадают из него.
      p Друг для друга флоатные элементы остаются видимыми. Идущие друг за другом флоаты выстраиваются в ряд, пока им хватает свободного места. Если места не хватает, то они начинают переноситься на следующую строчку. Почти как текст.
      p Как раз эта особенность флоатов позволила применять их для создания сеток. Ведь в начале 2000-х в CSS не было другого способа создавать колонки и задавать им размеры.
      h2 Свойство clear.
      p Свойство #[b clear] применяется ко флоатным и блочным элементам и запрещает им обтекать флоатные элементы, находящиеся с указанной от него стороны.
      p Значения:
      ul
        li #[b left] — запрещено обтекание элементов, находящихся слева.
        li #[b right] — запрещено обтекание элементов, находящихся справа.
        li #[b inline-start] — аналогично #[b left] для ltr и #[b right] — для rtl.
        li #[b inline-end ] — аналогично #[b right] для ltr и #[b left] — для rtl.
        li #[b both] — запрещено обтекание элементов, находящихся с любой стороны.
        li #[b none] — (по умолчанию) обтекание разрешено.
      p Если после флоатного элемента расположен элемент с запрещённым обтеканием, то последний опускается под флоатный.
      p Свойство #[b clear] «учит» блочные элементы «видеть» зафлоаченные.
      h2 Обычная сетка на флоатах.
      p Сетки на флоатах обычно делаются так:
      ul
        li Создаём блок-контейнер для колонок.
        li В контейнер добавляем флоатные блоки-колонки.
        li Добавляем распорку.
        li Рассчитываем ширины колонок так, чтобы им хватало места в родителе.
      P При создании колонок на флоатах нужно помнить про переполнение. Для этого достаточно задавать ширину колонок. Если текст в колонке будет слишком длинным, он перенесётся на следующую строку, и это нормальное поведение. Но если забыть задать ширину, то колонка сместит вторую колонку вниз. И это недоработка верстальщика.
      h3 Распорка.
      p Чтобы предотвратить выпадание колонок и схлопывание контейнера, после зафлоаченных колонок нужно добавить пустой элемент-распорку со значением #[b both] свойства #[b clear]. Этот элемент видит колонки и не даёт пройти через себя, а заодно и растягивает родительский блок по высоте.
      p Для таких распорок прижилось специальное название класса — #[b clearfix].
      p Пример:
      pre
        code.
          &lt;!-- HTML --&gt;
          &lt;div class="container"&gt;                /* Блок-контейнер. */
            &lt;div class="column-1"&gt; ... &lt;/div&gt;    /* Колонка, флоат. */
            &lt;div class="column-2"&gt; ... &lt;/div&gt;    /* Колонка, флоат. */
            &lt;div class="clearfix"&gt;&lt;/div&gt;         /* Распорка. */
          &lt;/div&gt;

          /* CSS */
          .clearfix {
            clear: both;
          }
      h3 Псевдораспорка.
      p Распорку можно создать с помощью псевдоэлемента.
      p Один из самых распространённых вариантов – это добавить класс #[b clearfix] контейнеру, внутри которого лежат флоатные колонки и в CSS добавить следующее правило:
      pre
        code.
          .clearfix::after {
            content: "";
            display: table;
            clear: both;
          }
      p После этого в контейнер не нужно добавлять дополнительный элемент-распорку, так как распорка создаётся внутри контейнера с помощью псевдоэлемента.
      pre
        code.
          &lt;div class="container clearfix"&gt;      /* Блок-контейнер. */
            &lt;div class="column-1"&gt; ... &lt;/div&gt;    /* Колонка, флоат. */
            &lt;div class="column-2"&gt; ... &lt;/div&gt;    /* Колонка, флоат. */
          &lt;/div&gt;
      h2 Префикс layout.
      p Использование значимых префиксов для именования классов — хороший приём, который нужно использовать в вёрстке.
      p Колонки имеют класс #[b layout-column]:
      pre
        code.
          &lt;div class="container clearfix"&gt;
            &lt;div class="layout-column layout-column-1"&gt; ... &lt;/div&gt;
            &lt;div class="layout-column layout-column-2"&gt; ... &lt;/div&gt;
          &lt;/div&gt;
      p Префикс #[b layout] обозначает «сетка» или «раскладка». Таким образом, мы даём понять, что классы с этим префиксом предназначены для создания сетки. Обычно для таких классов задают только флоаты, размеры и внешние отступы.
