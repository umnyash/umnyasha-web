extends ../../layout/layout

block variables
  - var title = 'Основы анимации'
  - var pageClass = 'article-page'

block content
  main
    article.article.container
      h1= title
      p Задача дизайнера — создать продукт, с помощью которого пользователь сможет эффективно решить свою задачу и получить положительный пользовательский опыт.
      p Применение анимаций в вебе:
      ul
        li Обратная связь, реакции на действия пользователя.
        li Донесение информации о происходящем. Например, для визуализации прогресса при выполнении какой-либо долгой операции.
        li Управление вниманием. Чтобы привлечь внимание пользователя к уведомлению или блоку, требующему от пользователя совершения действия.
        li Изменение состояний интерфейса. Порой сложно понять, куда делись какие-то компоненты при изменении сетки страницы и что к чему относится. Если сделать изменение структуры страницы анимированным, пользователь увидит откуда появились или куда передвинулись элементы.
        li Презентации. Есть вещи, которые сложно показать в виде статических картинок.
        li Сторителлинг — анимационные истории.
        li Декоративные анимации.
      p Анимировать можно только некоторые CSS-свойства. В основном, это свойства, изменяющие размер, цвет и позицию элементов.
      p #[a(href='https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_animated_properties' target='_blank' rel='nofollow noopener') Полный перечень анимируемых свойств и характер их анимирования].
      h2 JS или CSS для эффектов?
      p В любой ситуации, когда стоит задача плавно менять позицию или размеры блока, а также каким-либо способом менять его внешний вид, встаёт выбор: пользоваться связкой #[b transition] + #[b transform] или же задействовать Java Script и динамически менять ширину/высоту, координаты объектов в скрипте.
      p Зачастую выбор падает на JS-реализацию с помощью библиотеки jQuery, но в большинстве случае «чистая» CSS-реализация простых визуальных эффектов намного производительнее аналогичных jQuery-функций. Кроме того, в ряде случаев определённые трансформации в CSS могут для повышения производительности задействовать не только центральный процессор компьютера или мобильного девайса, но и ресурсы графического адаптера, что позволяет разгрузить процессор и избавиться от «тормознутости» эффектов.
