extends ../../layout/layout

block variables
  - var title = 'Блочная модель документа.'
  - var pageClass = 'article-page'

block content
  main
    article.article.container
      h1= title
      h2 Боксы и их типы.
      p Каждому HTML-элементу на странице соответствует прямоугольная область, которая называется боксом (от английского box — «коробка»).
      p Бокс состоит из содержимого (content), внутренних отступов, рамок и внешних отступов.
      p Самые распространённые типы боксов — блочные и строчные.
      p Тип бокса элемента можно изменить с помощью свойства #[b display].
      p Основные значения:
      ul
        li #[b block] — блочный.
        li #[b inline] — строчный.
        li #[b inline-block] — блочно-строчный.
        li #[b none] — временно удаляет элемент из документа. Занимаемое им место не резервируется и веб-страница формируется так, словно элемента и не было.
      h3 Блочные боксы.
      p Блочный бокс — это крупная неразрывная прямоугольная область на странице.
      p Блочные боксы имеют следующие особенности:
      ul
        li До и после блочного бокса существует перенос строки.
        li Для блочных боксов можно задавать ширину, высоту, внутренние и внешние отступы.
        li Занимают всё доступное пространство по горизонтали.
      p Блочными боксами по умолчанию обладают крупные поточные элементы, такие как: #[b &lt;h1&gt;&lt;/h1&gt;], #[b &lt;p&gt;&lt;/p&gt;], #[b &lt;ul&gt;&lt;/ul&gt;], #[b &lt;div&gt;&lt;/div&gt;] и другие.
      h4 Ширина и высота блочных элементов.
      p По умолчанию блочные боксы занимают всю доступную ширину, которая равна ширине родительского контейнера или окна браузера. Если у блока есть внутренние отступы или рамки, то ширина его содержания автоматически уменьшается, а общая ширина остаётся равной ширине родителя.
      p По умолчанию высота блочных боксов зависит от их содержимого. Если задать блочному боксу ширину и высоту так, что содержимое не будет в него помещаться, то оно как бы «выпадет» из него.
      h3 Строчные боксы.
      p Строчные боксы — противоположность блочных. Строчные боксы располагаются друг за другом в одной строке, могут разрываться и находиться на нескольких строках.
      p Особенности строчных боксов:
      ul
        li До и после строчного бокса отсутствуют переносы строки.
        li Ширина и высота строчного бокса зависит только от его содержимого, задать размеры с помощью CSS нельзя.
        li Можно задавать горизонтальные отступы.
        li При задании вертикальных внутренних отступов визуально увеличиваются, но без увеличения занимаемого места (не отталкивают другие элементы).
        li Воспринимают рамки. При этом рамки сверху и снизу не увеличивают занимаемое элементом место.
      p Строчным боксом по умолчанию обладают теги, предназначенные для оформления текста на уровне небольших фраз или отдельных слов: #[b &lt;a&gt;&lt;/a&gt;], #[b &lt;strong&gt;&lt;/strong&gt;], #[b &lt;em&gt;&lt;/em&gt;], #[b &lt;span&gt;&lt;/span&gt;] и другие.
      p Обычный текст, который не обёрнут во фразовый тег, оборачивается в анонимный строчный бокс.
      h3 Блочно-строчные боксы.
      p В HTML нет элементов с блочно-строчным боксом по умолчанию, но любой элемент можно переключить в такой режим отображения, задав ему свойство #[b display] со значением #[b inline-block].
      p Такие элементы ведут себя двояко: снаружи они выглядят как обычные строчные, а внутри они ведут себя как блочные.
      p Особенности элементов с блочно-строчным боксом:
      ul
        li По ширине ужимаются под своё содержимое.
        li Им можно задавать размеры с помощью #[b width] и #[b height], а также внешние и внутренние отступы, рамки, которые работают во всех направлениях и увеличивают размер элемента.
        li Они не создают принудительных переносов строк, поэтому могут располагаться на одной строке, пока вмещаются в родительский контейнер.
        li Реагируют на вертикальное выравнивание #[a(href='../css-properties/vertical-align.html') vertical-align].
        li Реагируют на горизонтальное выравнивание #[a(href='../css-properties/text-align.html') text-align], заданное у родителя.
      p Блочно-строчные элементы могут выстраиваться друг за другом, а если не хватает места, то они переносятся на следующую строку.
      p Высота строк у них рассчитывается по максимальному элементу с учётом отступов.
      p При использовании блочно-строчных лучше всегда явно задавать вертикальное выравнивание.
      h2 Поток документа.
      p Порядок отображения элементов на странице называется #[i потоком документа]. По умолчанию блочные элементы отображаются как прямоугольные области, идущие друг за другом сверху вниз, а строчные располагаются сверху вниз и слева направо и при необходимости переносятся на новую строку. Такое поведение называют #[i нормальным потоком].
      p Элементы можно вкладывать друг в друга. Чем раньше в коде расположен элемент, тем выше он расположен на странице.
      p Некоторые типы элементов могут вести себя в потоке более сложно. Например, они могут располагаться в несколько колонок, как блочно-строчные элементы.
      p Любой элемент, который находится в потоке, занимает на странице свою собственную площадь и может отталкивать от себя соседей с помощью внешних отступов.
      p Потоком можно управлять и изменить привычное поведение элементов в потоке. Например, можно заставить блочные элементы располагаться не сверху вниз, а выстраиваться в несколько колонок. Так что одна и та же разметка может выглядеть по-разному.
      p Научившись управлять потоком, вы сможете строить сетки.
      h2 Сетки.
      p #[dfn Сетка (раскладка)] — это взаимное расположение крупных визуальных блоков на странице. К таким блокам обычно относят шапку, подвал сайта, основное и дополнительное содержимое, различные секции и разделы. Как правило, количество сеточных элементов на странице не изменяется, а их размеры задаются согласно макету.
      p #[dfn Макет] — это изображение веб-страницы. Его создаёт дизайнер, а веб-разработчик использует его как образец при вёрстке. Макеты можно создавать в графическом редакторе или в специальных программах.
      p Чтобы строить сетки нужно:
      ul
        li Управлять размерами элементов.
        li Управлять поведением элементов в потоке.
      p Существует несколько способов управлять потоком и строить сетки:
      ul
        li #[a(href='float.html') Флоаты]
        li #[a(href='inline-block-grid.html') Инлайн-блоки]
        li #[a(href='tables.html') Таблицы]
        li #[a(href='flexbox.htlm') Флексбоксы]
        li #[a(href='grid.html') Гриды]
      h3 Микросетки.
      p #[dfn Микросетки] — сетки мелких элементов веб-страницы.
      p В отличие от крупных сеток, микросетки меньше зависят от макета и больше — от содержимого. Содержимое страниц со временем может меняться. Если не учитывать этого, вёрстка сломается.
      p В отличие от крупных сеток, где все размеры берутся из макета, в микросетках ширина элементов чаще всего зависит от содержимого.
