extends ../../layout/layout

block variables
  - var title = 'CSS-анимации'
  - var pageClass = 'article-page'

block content
  main
    article.article.container
      h1= title
      p CSS animation (CSS-анимации) имеют больше возможностей и помогают сделать то, что не могут CSS-переходы. В том числе создавать анимации с количеством шагов больше двух или запускаться сразу же при загрузке страницы и повторяться любое количество раз без какого-либо действия пользователя.
      h2 Создание анимации
      p Анимация создаётся  с помощью правила #[b @keyframes], в котором нужно задать название и описать изменяемые CSS-свойства в ключевых кадрах.
      p Требования к названию анимации:
      ul
        li Можно использовать только латинские буквы, цифры, знаки дефиса (#[b -]) и нижнего подчёркивания (#[b _]).
        li Нельзя ставить два дефиса подряд в начале имени.
        li Первый символ, или первый после дефиса, должен быть буквой.
        li Нельзя использовать специальные слова вроде #[b inherit], #[b none], #[b initial], #[b unset] и т.п.
      p Ключевые кадры задаются в процентах от времени анимации. Значения #[b 0%] и #[b 100%] могут быть заменены ключевыми словами #[b from] и #[b to].
      p Пример:
      pre
        code.
          @keyframes coloring { /* Эта анимация называется "coloring". */
            0% { color: red; }
            33% { color: yellow; }
            66% { color: green; }
            100% { color: blue; }
          }
      p Если начальный или конечный кадр не задан, то он автоматически создаётся, принимая исходное стилевое состояние элемента.
      p Задавать ключевые кадры можно в любом порядке. Это может быть удобно, чтобы сгруппировать одинаковые кадры. В таком случае их можно перечислить через запятую:
      pre
        code.
          @keyframes example {
            0%, 100% { ... }
            10%, 30%, 50%, 70%, 90% { ... }
            20%, 40%, 60%, 80% { ... }
          }
      h2 Применение анимации
      ul
          li #[a(href='../css-properties/animation-name.html') animation-name] — название.
          li #[a(href='../css-properties/animation-duration.html') animation-duration] — длительность.
          li #[a(href='../css-properties/animation-timing-function.html') animation-timing-function] — темп.
          li #[a(href='../css-properties/animation-delay.html') animation-delay] — задержка.
          li #[a(href='../css-properties/animation-iteration-count.html') animation-iteration-count] — количество итераций.
          li #[a(href='../css-properties/animation-direction.html') animation-direction] — направление.
          li #[a(href='../css-properties/animation-fill-mode.html') animation-fill-mode] — режим применения стилей.
          li #[a(href='../css-properties/animation-play-state.html') animation-play-state] — состояние.
          li #[a(href='../css-properties/animation.html') animation] — составное свойство (name duration timing-function delay iteration-count direction fill-mode play-state).
      p Чтобы применить анимацию к элементу, достаточно задать её имя и длительность.
      p По умолчанию, после завершения анимации элемент возвращается в исходное состояние.
      p Одному элементу можно задать несколько анимаций.
      p Для разных анимаций можно задавать разные параметры. Для этого параметры нужно перечислить через запятую в том же порядке, что и названия свойства:
      pre
        code.
          animation-name: move, stretch;
          animation-duration: 5s, 3s;
      p Если разными анимациями одновременно должно изменяться одно и то же свойство, то оно будет изменяться в соответствии с анимацией, заданной позже других.
