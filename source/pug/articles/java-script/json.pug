extends ../../layout/layout

block variables
  - var title = 'JSON'
  - var pageClass = 'article-page'

block content
  main
    article.article.container
      h1= title
      p #[dfn #[abbr(title='JavaScript Object Notation') JSON]] — это формат для представления значений и объектов. Первоначально он был создан для JavaScript, но многие другие языки также имеют библиотеки, которые могут работать с ним.
      h2 JSON.stringify
      p Метод #[b JSON.stringify] возвращает строку JSON, соответствующую указанному значению, возможно с включением только определённых свойств или с заменой значений свойств определяемым пользователем способом.
      pre
        code.
          JSON.stringify(value[, replacer, space]);
      ul
        li #[b value] — значение для кодирования.
        li #[b replacer] — массив свойств для кодирования или функция соответствия.
        li #[b space] — дополнительное пространство (отступы), исопользуемое для форматирования.
      p JSON поддерживает следующие типы данных:
      ul
        li Объекты.
        li Массивы.
        li Строки.
        li Числа.
        li Логические значения.
        li #[b null].
      p #[b JSON.stringify] пропускает:
      ul
        li Свойства-функции (методы).
        li Символьные ключи и значения.
        li Свойства, содержащие #[b undefined].
      p #[b JSON.stringify] заменяет:
      ul
        li #[b undefined], встреченный в массиве, на #[b null].
      h3 replacer
      p Параметр #[b replacer] используется для кодирования объектов.
      p В качестве #[b replacer] можно передать массив названий свойств, которые будут преобразованы в JSON во всех встреченных объектах. При этом остальные свойства будут пропущены.
      p В качестве #[b replacer] можно передать функцию, которая будет вызываться для каждого свойства объекта и должна возвращать какое-либо значение (старое или новое).
      p Если функция не вернёт значение, то значением станет #[b undefined], что приведёт к тому, что свойство будет пропущено. Таким образом можно пропустить даже весь объект.
      h3 space
      p Параметр #[b space] задаёт количество пробелов или строку, которые будут использоваться для отступов каждой новой строки.
      p Применяется исключительно для логирования и красивого вывода.
      h2 Пользовательский «toJSON»
      p Как и #[b toString] для преобразования строк, объект может предоставлять метод #[b toJSON] для преобразования в JSON. #[b JSON.stringify] автоматически вызывает его, если он есть.
      h2 JSON.parse
      p Метод #[b JSON.parse] декодирует строку JSON. Возможно преобразование получаемых в процессе разбора значений свойств объектов.
      pre
        code.
          JSON.parse(text[, reviver]);
      ul
        li #[b text] — значение для кодирования.
        li #[b reviver] — функция, которая будет вызываться для каждого свойства объекта и может заменить его значение.
